plugins {
    id 'org.springframework.boot' version '2.5.5'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id "org.asciidoctor.jvm.convert" version "3.3.2" // (1)
    id 'java'
}

group = 'com.example'
version = '1.0'
sourceCompatibility = '11'



configurations {
    asciidoctorExtensions // (2)
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    snippetsDir = file('build/generated-snippets')
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.projectlombok:lombok:1.18.18'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok' // 추가
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc' // (3)
    asciidoctorExtensions 'org.springframework.restdocs:spring-restdocs-asciidoctor' // (4)



}



test {
    outputs.dir snippetsDir // (5)
    useJUnitPlatform()
}

asciidoctor {
    dependsOn test // (6)
    configurations 'asciidoctorExtensions' // (7)
    inputs.dir snippetsDir
    //attributes["snippets"]=snippetsDir
//    sources{
//        include("**/index.adoc,")
//    }
    baseDirFollowsSourceFile()
}

task copyDocument(type: Copy) {
    dependsOn asciidoctor
    from file("build/docs/asciidoc")
    into file("src/main/resources/static/docs")
}

build {
    dependsOn copyDocument
}


//bootJar {
//    dependsOn asciidoctor
//    copy {
//        from "${asciidoctor.outputDir}"
//        into 'src/main/resources/static/docs'
//    }
//}
//
//asciidoctor.doFirst {
//    delete file('src/main/resources/static/docs')
//}
//
//task copyDocument(type: Copy) {
//    dependsOn asciidoctor
//    from file("build/docs/asciidoc")
//    into file("src/main/resources/static/docs")
//}

